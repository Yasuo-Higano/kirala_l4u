-
*
*ARGV*
*host-language*
*regex
*toplevel*
*trace_ip
*trace_level
/
+
<
<=
=
>
>=
abspath
and
apply
assert
assoc
atom
atom?
bindf
caar
cadar
caddar
caddr
cadr
car
case
case*
cdddr
cddr
cdr
concat
cond
cond*
conj
conjunction
cons
contains?
count
custom-type-to-map
datetime-format
def
def-custom-type
def!
defmac
defmacro!
defn
defun
deref
describe
dir-exists?
dir-scan
disjunction
dissoc
do
empty?
eq?
erase!
escape
eval
false
false?
file-exists?
first
float
fn
fn?
fn*
foldr
for-each
gensym
get
get-cwd
global-get
global-keys
hash-map
hash-map?
head
if
import-native-function
import-native-functions
import-native-module
inspect
inspect-env
instanciate-custom-type
int
invoke-native-function
json-format
json-parse
keys
keyword
keyword?
l4u-processes
let
let*
list
list?
load-file
macro?
macro*
macroexpand
macroexpand-all
map
map?
max_len
meta
mod
native-function
native-module-info
native-nodes
native-processes
native-value
nil
nil?
not
now
nth
number?
or
os-cmd
pr-str
println
prn
product
quasiquote
quasiquote0
quasiquoteexpand
quasiquoteexpand0
quote
range
read
read-file
read-string
readline
receive-from
reduce
rename!
repl-switch
reset!
rest
reverse
run-time
self
send
seq
sequential?
set-cwd
sh*
show
slurp
spawn
str
string
string-contains
string-ends-with?
string-find
string-join
string-length
string-lower
string-pad-left
string-pad-right
string-repeat
string-replace
string-replace-all
string-replace-first
string-replace-range
string-reverse
string-split
string-starts-with?
string-substring
string-trim
string-upper
string?
sum
sum_len
swap!
symbol
symbol?
tail
throw
time-ms
to-hash-map
tokenize
trace
trace-clear
true
true?
try*
undefined
unescape
unique-int
unwrap-ok
vals
vec
vector
vector?
with-meta